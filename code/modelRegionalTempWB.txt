
       model{
#       # Likelihood
#       for(i in 1:n){ # n observations
#       temp[i] ~ dnorm(stream.mu[i], tau)
#       stream.mu[i] <- inprod(B.0[], X.0[i, ]) + inprod(B.year[year[i], ], X.year[i, ]) #  
#       }

      # Likelihood w ar1
      temp[1] ~ dnorm(stream.mu[1], tau) 
      stream.mu[1] <- trend[1]
      trend[1] <- inprod(B.0[], X.0[1, ]) + inprod(B.year[year[1], ], X.year[1, ])
      
      for(i in 2:n){ # n observations
        temp[i] ~ dnorm(stream.mu[i], tau)
        stream.mu[i] <- trend[ i ] + ar1 * (temp[i-1] - trend[ i-1 ]) #residuals[ i - 1 ] #  
        trend[ i ]  <- inprod(B.0[], X.0[i, ]) + inprod(B.year[year[i], ], X.year[i, ])
      }
      ar1 ~ dunif(-1.01,1.01)
      #ar1 ~ dunif(-0.001,0.001) #turn off ar1

      # prior for model variance
      sigma ~ dunif(0, 100)
      tau <- pow(sigma, -2)
      
      for(k in 1:K.0){
      B.0[k] ~ dnorm(0, 0.001) # priors coefs for fixed effect predictors
      }
      
      # YEAR EFFECTS
      # Priors for random effects of year
      for(t in 1:Ti){ # Ti years
      B.year[t, 1:L] ~ dmnorm(mu.year[ ], tau.B.year[ , ])
      }
      mu.year[1] <- 0
      for(l in 2:L){
      mu.year[l] ~ dnorm(0, 0.0001)
      }
      
      # Prior on multivariate normal std deviation
      tau.B.year[1:L, 1:L] ~ dwish(W.year[ , ], df.year)
      df.year <- L + 1
      sigma.B.year[1:L, 1:L] <- inverse(tau.B.year[ , ])
      for(l in 1:L){
      for(l.prime in 1:L){
      rho.B.year[l, l.prime] <- sigma.B.year[l, l.prime]/sqrt(sigma.B.year[l, l]*sigma.B.year[l.prime, l.prime])
      }
      sigma.b.year[l] <- sqrt(sigma.B.year[l, l])
      }
      
      # Derived parameters
      residuals[1] <- 0 # hold the place. Not sure if this is necessary...
      for(i in 2:n) {
      residuals[i] <- temp[i] - stream.mu[i]
      }
      }
      
